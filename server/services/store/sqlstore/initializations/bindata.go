// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/templates.json
package initializations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\x4f\x8f\x9c\xb9\x71\xfe\x57\x79\x7f\xbd\x87\x1f\x10\x4c\x21\x64\xb1\x48\x16\x75\xd3\xae\xec\xb5\x80\xf5\xae\x6c\xc9\x71\x02\x7b\x61\xf0\x4f\x71\xd4\xde\x9e\xee\x41\xf7\x3b\x92\x07\x82\x4e\xb9\xda\xb1\x63\x18\x30\x92\x35\xb2\x46\x8c\x04\x3e\x3a\x48\x0e\x41\x82\x5c\xfc\x51\xfc\x05\xb2\x1f\x21\x60\x8f\x76\xd4\x33\xf3\xb6\x44\x8d\x56\xab\xb1\x13\x48\x87\x9e\x79\xbb\x49\x76\xd5\xc3\xa7\x9e\x2a\x16\xe7\xc9\xec\x91\xac\x37\xf3\xd5\x72\x76\x4b\x1f\xcc\x4a\x1c\x65\x76\x4b\x3b\xc5\x06\xad\x0a\x0a\xb5\x3e\x98\xa5\xc5\x2a\x7f\xb2\x99\xdd\xfa\xde\x93\xd9\xbc\xcc\x6e\xcd\x30\x25\x5f\xb2\x29\x90\x8d\x8b\x40\xa2\x14\xb0\xa8\x0a\xd1\x15\xa3\x63\x56\xd6\x64\x3f\x3b\x98\x1d\xc7\xb5\x2c\xc7\xbb\xed\x13\xb3\x83\xd9\x7a\xb5\x3a\x7b\xdd\xf9\xe9\x4d\x7e\x28\x47\x71\xbb\xa8\xf1\xf4\x58\x66\xb7\x66\x69\x15\xd7\x65\x76\x30\x1b\xe7\xe3\xa2\xfd\x7c\x6f\xbd\xfa\xa1\xe4\x71\x78\x10\x37\x9f\x6c\x66\x07\xb3\x3a\x97\x45\xd9\xcc\x6e\x3d\x99\xe5\xb8\x2e\xf7\xd6\xab\x63\x59\x8f\x73\xd9\x59\x78\x0c\x1e\x4b\xf6\x11\x6c\xa5\x0c\x64\x0b\x02\x2b\x22\xe0\x8c\x9c\x5d\xf0\xda\x57\x3d\x3b\x98\x2d\xe3\x51\x1b\xff\xfe\x18\xc7\x93\x36\xf0\xea\x78\x9c\xaf\x96\x67\xe3\xe4\xd5\x62\xb5\x9e\xdd\x9a\x1d\xaf\x57\xc7\xef\xb5\xd7\x77\xa4\xc6\x93\xc5\x38\x3b\x38\x9b\x82\xc8\x4b\xae\xa4\xa1\x54\x5b\x80\x50\x34\x70\x88\x09\xbc\x26\x71\xde\x4a\x74\xbe\x4d\xf1\x28\x2e\x4e\xda\x1c\x1f\xca\x8f\xc6\xe1\x3b\xc7\xb3\xa7\x07\x13\x43\xff\x95\x2c\x16\xab\xc7\x5f\x8c\x5c\x8a\x4f\x26\xfa\x00\x92\xb0\x00\x05\x63\x81\x83\x0d\x80\x41\xd9\x10\x4b\xb0\xde\xc4\x9d\x91\xef\x2e\x87\x7b\xeb\xd5\xe1\x5a\x36\x9b\xe9\xd1\xdf\x5f\x8b\x2c\x77\x06\x8f\x09\x53\x81\x90\xbd\x03\x2a\x12\x80\x55\x65\xb0\xda\x8b\x76\xb5\x68\xb6\xbb\xcb\x7e\x6f\x75\x74\xbc\x90\x51\xca\xef\x7f\xfd\xfb\x5f\x7f\xfe\xd9\xdf\xfd\x78\x7a\x8a\x77\xd7\xab\xc7\xe7\x53\x38\x2b\x36\x87\x68\xc0\xa4\x18\x81\xaa\xf6\xc0\xda\x65\xc0\x36\x71\xf4\xa6\x48\x09\x3b\x53\xdc\x5e\xe7\x87\xf3\x47\x52\x66\x4f\x3f\x3e\x47\xc0\x46\x16\x92\xc7\xed\x5c\x67\xab\x36\xc5\x31\xa6\x0a\xa2\x3c\x01\x85\x12\x80\x4b\xb5\xe0\x0d\xaa\x80\x3a\x63\x41\xf3\xdc\x9f\xf7\xd6\xf3\xd5\x7a\x3e\x9e\xbe\xcc\xa3\xdf\x96\x72\x6e\x16\x93\x6a\xb2\xaa\x42\xb5\x2e\x00\xa5\x58\x80\xa3\x89\x50\x8a\xb6\xd9\x54\xa7\xb4\xda\x35\xcb\x37\xe6\x87\x0f\x87\xcf\x3f\xfb\xc5\x3f\xf5\xf8\x93\x7d\xb5\xc1\x33\x41\x62\x1b\x80\x32\x12\xb0\x24\x01\xed\xb3\x77\x4e\x14\xeb\x52\x76\xc6\xfe\xa6\x94\xf9\xc9\xd1\x3e\x57\xc6\xd3\x2f\x86\x0d\x1c\xad\x77\xe8\x41\xd5\xe6\x49\xaf\x0b\xb0\x55\x05\x82\xae\x46\x4a\xa8\x05\xb5\xd9\x19\xf6\x83\xd5\xe3\x17\x59\x18\xa3\x2d\xd1\xa0\x02\x6f\x6c\x06\x52\xc1\x00\x7b\xf6\xcd\x1e\xa2\x6d\x2e\x55\xb6\xc6\x7a\x66\xe1\x3b\x71\x94\xe1\xbd\xb5\xc4\x71\xfb\xdb\xe7\x56\x7e\x3e\x41\x3e\x7b\xfa\x60\x7e\x24\xdb\x79\x8b\x6c\xf2\x7a\xbe\x7d\xe3\x19\x4f\xcc\xf3\xf6\xd5\xe7\x9f\xfd\xcd\xcf\xdb\x4f\x9b\x07\x72\x74\xbc\xd8\xb2\xd2\xb8\x3e\x91\xa7\x07\xcf\x46\xb8\x3d\x6e\x69\xca\x3b\xd4\xde\x69\x6b\xf0\x60\x76\x72\x5c\x2e\x3c\x40\x64\xa4\xe0\xda\x1c\x0d\xab\xed\x81\x3a\xff\x62\xa6\x46\x8b\x4a\x12\x18\x95\x0b\x10\x5b\x04\xc6\x10\x21\x45\x93\xb2\x17\x66\x41\xb7\x9f\xc3\x3a\x3f\xfd\x72\x0e\xfb\xa6\xc8\x38\x5f\x1e\x0e\x1f\xae\x46\xe9\xe3\x30\x9f\x51\xa3\x78\x86\x60\xc8\x02\x65\xa7\x80\x75\xb2\xa0\x92\x12\xe3\xb3\x90\x33\xf5\xb9\x47\x1e\xb4\x69\x5f\x82\xf7\x8b\xb0\x34\xba\x44\xab\x72\x84\xaa\x63\x00\x2a\xa8\x81\x9d\x71\xa0\x1b\x69\xb3\xcf\x3a\xe2\x2e\x7e\x6e\x97\xe1\x1b\xab\xbc\x67\xfb\xb7\xb7\x7c\xb1\x93\xa4\x3a\xa3\x7d\x06\xc9\x5a\x03\x69\xd5\x76\x92\x4b\x20\x91\x9c\x36\xa8\xaa\x09\xb8\x33\xec\xfd\x31\x2e\xcb\xc9\x1e\x5e\xbc\x77\xb2\x3e\x5e\x9c\x8f\xec\x95\xaa\x6c\x2a\x83\x8b\xa4\x81\x5c\x2e\xc0\x5e\x10\xac\x11\x55\x54\xd2\x98\xb7\xf1\xe4\x8b\x91\xbf\x2b\xf2\xc9\xe2\x74\xb8\x7f\xba\xcc\x2f\x02\xbe\x36\x05\x4d\xa0\x08\x92\xac\x00\x55\xc4\x16\x25\x10\x9c\xd5\x56\x32\xe9\x4c\x91\x76\x42\xc5\xc9\xd1\x51\x5c\x9f\xee\xc1\xfc\x28\x3f\x1a\x5f\x02\xf6\x5f\xfe\xfc\xbf\xff\xfd\xa7\x3d\x78\xf7\xda\x6b\xe7\x82\x73\x97\xf1\xee\xb5\x37\xce\x04\xd6\xd3\x78\x77\x49\x4c\xc8\x59\x43\xc5\xb6\x91\x7d\xaa\xc0\x85\x02\x54\x27\x14\x59\xe5\xca\x1e\xf7\xe3\xbd\xf3\xd3\x1d\x31\x5b\xd6\x9b\xd5\x32\x2e\x86\xf7\x57\x71\xd1\x19\xb4\xab\xab\x39\x25\x86\x1c\xad\x03\x4a\xde\x00\x9b\xb6\xf5\x3c\x19\x9f\x42\x74\xce\x97\x57\x0d\xda\x3b\x14\x9f\xaa\xc5\x54\xc5\x41\xcc\x4d\x13\x04\x62\x60\xd4\xb5\xcd\x11\xa3\xce\x3e\x29\xda\x0d\xab\x0f\x56\xc3\x9d\x55\x0f\xbd\x7b\x9f\xad\x09\xb1\x82\x51\x21\x03\x95\xa4\x81\x0d\x06\x28\xa8\xa4\x7a\x09\x12\xf3\x2e\xbd\xdf\x59\xcd\x97\x87\x1d\x81\x3a\x70\x2a\x12\x1b\xbd\xe7\x2c\x40\xb9\x08\x70\xc9\x0e\x50\x63\x2c\xc5\x38\x71\x17\x54\xc0\x9d\xd5\x52\x86\xb3\x00\xfd\x82\x30\x1a\x3c\xda\xa2\x09\x8a\x8d\x0c\xc4\x62\x81\x8b\x68\x70\x95\xb3\x52\x14\x83\x63\xf5\xdc\xc2\xef\xc5\x51\x0e\x57\xeb\x97\x86\xd1\x8b\xbb\xd4\x20\xd9\x68\xb0\x40\x75\xcc\x40\xce\x24\x60\x5f\x5b\xc8\xf3\x9a\x30\xeb\x64\xc2\xee\x2e\xfd\x60\x5e\x65\xb8\xff\xc9\x7c\xb1\xe8\x51\x2f\xac\x92\x6c\xb5\x44\x6d\xe2\x8e\x02\x32\x30\x71\x00\x4e\x0a\x35\xab\x4a\xc1\xd2\xce\xe0\x5f\x9f\x2f\xe3\x32\xcb\xf4\xc0\x1f\xad\xe3\xf2\xf0\x7c\xd9\xb5\x26\x53\x83\xd5\x90\xc8\x57\x20\xdd\x96\x5d\x75\x01\x34\xec\x9c\xf3\xc8\x4a\xf1\xae\x00\x90\xb8\x18\x1f\xbe\xd0\xd6\x2e\x69\xa4\x90\x20\x65\xcd\x40\xb6\x66\x60\x0e\x02\x49\x32\x71\xcd\xc2\x4a\x76\xe8\xfb\xce\x89\x0c\x2d\xa8\xbe\xa2\x08\x0d\x51\x05\x25\xc6\x40\xd2\x5a\x01\xa1\x63\xe0\xa0\x02\x68\x83\xd9\x2a\x85\x39\x28\xd9\x59\xf5\xb7\xf4\xb4\x29\x2e\x8d\xaa\x22\x63\xf0\xbe\x42\xdb\x30\x40\xd6\x27\x60\xd2\x09\x04\x93\xaf\xde\xd5\x64\xd1\xee\x8e\x8a\x5d\xa3\x3a\xf1\xda\x04\x21\xb0\xc6\x36\x60\xa4\x04\x9c\x95\x06\x9f\x14\x86\x68\x7d\x62\xb5\x0b\xe8\x6f\x99\xae\x51\x8b\x35\x5e\x67\x67\xc0\xb9\xb6\x56\x6a\x16\xf0\x86\x21\x53\xc9\x94\x24\x12\xd3\x6e\x14\xfb\x16\x4d\xf9\xec\x05\x8c\xfd\x87\x4f\x7f\xd7\x4d\xd8\x16\x35\xa3\x57\x57\x09\xdb\xba\xed\xff\x69\xc2\x0e\x86\x6a\xc0\xe4\x21\xd4\xa2\x81\x52\x53\x5e\x35\x6b\x50\x44\x31\x95\x28\x39\xe7\xb0\x9f\xb0\x3b\x3f\xfd\x0a\x84\xdd\x9f\x65\x15\xef\x7d\x13\x42\xc0\x1e\x19\x48\x15\x0d\xec\xa3\x03\x1b\x48\xb9\x94\x52\xaa\x49\xbd\x2a\x61\xdf\x9b\x2f\x3f\x39\xa7\x12\x92\x14\x32\x5a\x28\xb6\xf9\x76\xab\xfa\x6d\x10\xa8\x9e\x6a\x4b\x27\x8d\x12\x7f\x1d\xc6\x2e\xc6\x47\xa7\x2b\x41\x35\x06\x1b\x63\x37\x02\xc1\x02\x56\x54\x0c\x3a\x46\x54\x72\x1d\xc6\x2e\x31\xc5\x52\x42\x82\x58\xaa\x06\x2a\xa1\x02\x7b\xd5\x32\x4f\x1b\xb3\xcb\x52\x9d\xc2\x5e\xc6\x7e\x11\x22\x7f\xf5\x8b\x4e\x44\x3a\x54\xc1\x58\xab\xaf\x48\x08\x87\xda\x04\x6b\x71\x0f\x22\x8b\xaf\x6c\x3c\x17\x60\xbd\x55\x9e\x8c\xc0\x54\x1c\xc4\x5a\x93\x24\x5f\x8b\x2f\x71\x3f\x22\x3b\x3f\xfd\x72\x44\x7e\x7b\x15\xcb\x51\x3c\xee\x82\xa2\x55\x5a\xfb\x62\x11\x52\xce\x1e\xc8\x5b\x05\x8c\x31\x02\x1b\x1d\x8d\xd5\x99\x28\xbe\x32\x14\x2f\x31\x0d\x67\x6b\x7d\x75\x01\x92\x92\x02\xe4\x24\x03\x9b\x68\x80\xa5\xc6\x14\x0a\x79\xa9\xbb\xac\xf8\xe1\x6a\x1c\xee\x8f\x71\xdd\x32\xa4\x0e\x4c\x4a\x76\x05\x53\xb6\x50\x2a\x26\xa0\xea\x3d\x30\xf9\x00\x62\x43\x96\xa4\x4c\x08\xe4\xae\x9d\xf4\x33\x05\xef\x5c\x8a\x60\x5d\xb4\x40\xdc\x36\x2a\xbb\x0a\xa8\x9d\xc7\x4a\xda\x9a\x60\x27\x92\xfe\x97\xea\x09\x54\x5e\xfb\x58\x0c\x58\xdf\x14\x39\x69\x07\x6c\x6a\xd3\x13\xda\x98\x5a\xab\x29\x5a\xbf\x4e\x8a\x42\x48\x12\xad\x18\x08\x31\x6a\x20\xe5\x2d\x70\xb6\x19\x94\x4e\x44\xc9\x35\x0d\xb4\x1b\xee\xbf\x76\x3c\xcf\xc3\x1f\x3e\xfd\x5d\x87\x45\x9c\x48\x0c\x2e\xb7\x74\xdc\x69\xa0\xd0\xc2\x86\xb5\xd4\x54\xa7\x35\x5e\xb8\x7a\xda\x0d\xf7\x8d\x13\x5b\xbe\xff\xdb\xe9\xa1\x77\x54\xa6\xae\x25\x25\xab\x2d\x48\x29\x08\x14\xab\x05\x56\x35\x03\x19\x2f\x05\x51\xeb\x48\xbb\xc5\x8f\x77\x4f\x0e\x87\xcf\x3f\xfb\xd9\x3f\xbc\xc8\xca\x4e\x05\xb6\x95\x1c\x18\x69\x56\x66\x27\x4d\xb8\x1a\xc0\x14\xd8\x13\x29\x89\x3a\xef\x60\xfb\x78\x3d\x5f\x8e\xaf\x88\xed\xac\xb4\xf3\x2e\xb7\xbc\x76\x1b\xf1\x0d\x01\x27\xb1\x90\xb3\x20\xb2\x2f\x31\xba\xbc\x9b\xb4\x6d\xe7\x18\xfa\xd4\x84\x14\x8a\xd6\x90\x02\x72\xaa\xed\x1b\x9d\x80\xd9\x30\x60\xb6\x4e\x58\xc4\x86\x2a\x57\xc7\xee\xd3\x14\x9a\x38\xa0\x61\x05\x3a\x36\x26\xc7\x52\x80\x95\x21\x88\x2a\x4b\x34\xd8\x52\x74\x77\x75\x6c\xf3\x22\x6b\x57\x5f\x4d\x2c\x84\x90\x8c\x8e\x40\x31\x23\xb0\xae\x0a\x90\xa5\x25\x40\x36\x19\x92\xd7\x2a\x35\xe5\xc4\x92\x4b\xcc\x60\x38\x09\x50\x31\x0e\xd8\x6b\x6c\x8a\xc5\x72\xce\x1c\x59\x76\x11\x72\x4f\x77\x17\x9a\xc4\x45\x5f\x31\x78\x20\x6a\xe6\xf6\x6c\x80\x63\x32\x60\x62\xb5\x29\x3a\xcc\x51\xef\x16\xb1\xee\xed\xb1\xf1\x6e\x91\x29\x3b\xd4\x1e\x25\x82\x2d\xd1\x03\x95\x46\x7a\x9a\x1d\x18\x8f\xce\x17\x16\x09\x71\x37\x04\xdf\x9b\x34\xed\x8b\x13\xe2\xff\xe8\x8e\x66\x68\xd1\x2a\xa6\xab\xd1\xcc\xa0\x42\x45\x6a\x3a\x9a\x29\xe5\x73\xcc\xce\x01\xc5\x64\x81\x52\x0b\x0d\x36\x21\xa0\x0a\x25\x88\xb5\x31\xab\x7c\x31\x9a\x75\x16\xae\x5f\xbf\xd0\x9d\x2f\x06\xbc\xfb\x32\x8e\xf3\xe5\xe1\x66\xf8\xce\x5f\x5e\x08\x7a\xcf\x2b\x65\x9f\x9e\xd9\xea\x78\x27\x02\x3e\xe9\x2b\x76\x77\x97\x95\xbb\x4a\xad\x9d\x45\xcd\xa7\x53\x55\xbc\x10\xac\xa6\xa9\x2a\x9e\x22\x1b\x54\x98\x76\xa2\xce\xc6\xba\xda\xb4\x1f\x72\x04\x4a\x5a\x80\x5d\x5b\x55\x25\x09\x85\xa2\xd7\xdb\x48\x70\x03\x9c\xd8\x42\xc5\x94\xf7\x26\x20\x7e\x4d\x47\x76\x9e\x3c\xbc\x69\x47\x22\x29\x8b\x34\xa1\x2d\x91\xb4\x56\x68\xf6\x39\xb2\x90\xa1\xa4\xc0\xdb\xe8\x80\xbc\x29\xc0\x68\x04\x82\xe5\x98\x03\xc7\xea\x5c\x79\x4b\x8e\x7c\x34\x97\xc7\x3b\x8e\x7c\xf7\x74\xd8\x61\xf7\x8b\x12\xf4\xa3\x75\x91\xf5\x59\xe9\x2f\xaf\x16\x27\x47\xcb\xef\xce\xcb\xf8\xb0\x3d\x7e\xda\xde\xba\x18\xdb\xd3\x27\xcf\x5e\x3d\xab\x11\x36\x4f\xc7\x67\x04\x18\x97\x4d\x14\xce\x0e\xd7\xab\x93\xe3\x77\x4f\xef\xbe\xc2\x11\xc7\xc3\x79\x29\xb2\xfc\x68\xcb\xa4\x77\xdb\x82\xbe\xd7\x77\xde\xf2\xf1\xc1\x6c\xb3\x5a\x8f\x1f\xed\x56\x2d\xdb\x17\x7e\x70\x51\x7b\x3f\x9a\x6f\xe6\x69\x21\xbb\xe3\x7f\x7c\xfe\xdb\x67\xc2\xfb\xf4\xd9\xbc\x5d\x2b\xfe\x78\x6f\x21\xdf\x4c\x15\xf2\xad\x71\xfb\xb2\x12\x57\x8d\x2d\x26\x19\x50\xa9\x78\xa0\xa8\xb6\xf5\x03\x02\xb2\xac\x02\x66\xe3\x2a\x9b\x9b\x41\x01\x77\xe2\x18\x53\xdc\xc8\x70\xff\xec\x9d\x93\x5c\xfe\xf3\xff\xba\x2e\x91\x7f\xb9\xfb\xbf\xeb\xe4\x6b\x92\xc8\x5b\x56\x61\xfc\x44\x6e\x19\xc8\x3b\x47\xd3\x5e\x4c\xa1\xe8\x9a\x1b\x7d\x2b\xdd\x24\x7d\x75\xc0\x3a\x27\x88\x4e\x25\xa5\x4d\xc8\x89\x6f\xc8\xfe\xbf\xbd\xd8\x57\x0b\xd9\xbf\xfb\xfb\x8e\xd1\x6e\x69\x1f\x0e\x66\x3f\xf8\xc1\xb3\x99\x90\xd5\x41\xa7\xef\x35\x62\xaf\x63\xb5\x56\xaf\xc4\x45\x57\x89\xe5\x25\x94\x31\xc6\xb4\xad\xfa\xbe\x0a\x65\x74\x9e\xcb\x77\x72\x61\x97\xb1\xa7\x08\x08\xd1\x51\x70\x53\x04\x64\x9c\x36\x16\xa7\xa1\x9b\x55\x2e\x92\x35\x03\x72\x30\x40\x41\x02\x30\x49\x06\x8b\xb6\x24\x15\x2d\x15\x93\x6e\x06\x74\xdf\x3d\x1d\xce\x4b\x1c\x6f\x3c\x70\x75\xfa\xf4\x95\xf1\x75\x8d\x90\x34\xed\x6b\x22\x1f\x26\x92\x06\x44\xcb\x9e\xfc\xb4\xaf\xab\x8b\xa1\x68\x49\xe0\x8c\x13\xa0\x9a\x2d\xb0\xd1\x1e\x32\x63\x0c\xde\xb0\x76\xde\xde\x8c\x60\x73\xfb\xde\xdd\xe1\x83\x78\x2a\xeb\xe9\x30\xf3\xe3\x7f\xbb\x19\x61\xe6\xfa\x32\x53\x39\xe5\x26\xfd\xa7\x9d\x26\xdc\x93\xf4\xb5\xe8\x12\xd0\x79\x48\x5b\xb1\x40\xd9\x03\x1b\x44\x40\x24\x51\xb9\xa2\x78\xc7\x17\xfd\xd7\x79\xd2\xff\xfa\x9d\x01\x97\xfc\xf7\xe1\xea\xd1\x80\x17\xf7\xe9\x6a\x39\xca\x72\xfc\x62\xab\xce\xbc\xa8\x58\xa2\x6a\xb9\x2b\x6b\xa0\x52\x22\xb0\x2a\x0e\xaa\xb5\xca\x56\xc9\x5c\x5c\x6a\xfa\xee\x79\x9a\xf8\x9f\x57\x7c\xde\x75\xca\x7d\x6b\xb6\xad\x91\x0d\x8b\xf9\xe1\xc3\xf1\xff\xcd\x0e\xfa\x5a\x10\x3a\x8f\xfc\xaf\xfa\xd6\x6b\x8f\x68\xd0\xd9\x4b\xbe\xdd\x76\xa4\xb1\x32\x6e\x4f\x2e\x98\x58\xab\xac\x43\x00\x89\x4d\xb1\x38\xc5\xc0\x49\x19\x40\x15\x25\x05\xe4\xaa\xb7\xc7\x0e\x6f\xc3\xb7\x57\x79\x78\x3c\x2b\x7a\xbe\x71\x16\xee\xec\x16\xf9\x2a\x58\xb8\x0f\x6c\x57\xb9\x7a\xdb\xf1\xe0\x95\xba\x52\x1b\xf0\x9a\x15\x2b\xdc\x7b\x5c\xc1\xda\xa2\xaf\x0e\x5c\x30\x15\x88\x9a\x82\xad\xa1\x42\xf5\x18\x14\x2a\x6a\xb1\xfe\x66\xe0\xe1\x41\x93\x4c\xc3\xb3\x5f\x76\x6b\xca\xbe\xbd\xeb\x9a\x34\xec\xdb\xb0\xda\xd8\x8b\xf2\xf3\xe6\x09\xc5\x4e\x38\xbf\x06\xd2\x82\x52\x6a\xaa\xb7\x86\xac\x67\xda\xd3\x5b\x83\x4a\xab\x44\xc4\x90\x31\x60\x0b\x89\x09\x38\x26\x0f\xb9\x38\xeb\x74\x4e\x59\xa5\x4b\x55\xa8\xce\x7e\x9a\xd7\xef\xbf\xb9\x5c\x4a\x1c\xe3\x7a\x1c\xe2\x50\xe2\x7c\x71\x3a\xfc\x70\x75\xb2\x5e\xc6\xc5\x94\x42\xf8\xc3\xaf\x7e\x32\x59\x53\xec\xe9\xc5\xe9\xee\xa9\xe9\xea\x85\xe8\xee\x3b\xe8\xea\x62\xe9\x6c\x44\x99\x8a\x4a\xd6\x5a\x4f\x0d\x02\x57\x8e\xf1\x2d\x6b\xa7\x79\x0f\x36\x5c\xce\x91\x63\x86\x9c\x88\x81\xa2\xf1\xc0\x6c\x09\x98\x52\x94\x90\x74\x60\xe2\xb7\x84\x8d\xab\x51\x69\xf3\xd5\x65\x07\x7d\x4d\x5d\x5f\x49\x5c\xea\x6c\x7f\xea\x42\xeb\x14\xa9\x58\x44\x6b\xfc\x44\xf8\xb2\x56\x33\xba\x3d\xa9\x86\xe1\x4a\x49\x94\x87\xaa\x6b\x6c\x7b\x28\x03\x67\x6d\x21\x06\xe5\x95\x72\x35\x44\x6b\x6f\x06\xa9\x7c\x20\x71\xbd\x1c\xc6\xd5\x70\x1c\xcf\x8e\x18\xa7\x8e\x28\x7e\x7b\x5d\x2e\xe9\xec\xa3\xeb\xe4\x92\xce\xce\xa8\x37\xce\x25\x2d\x0b\xb2\x57\x2a\x0d\x5e\x5b\x0a\xda\xf0\x9e\x22\x99\x55\xda\x64\x8e\x8d\x41\xa4\xe5\x54\xaa\x02\x07\x83\xa0\x75\xa0\xa0\xa2\xd6\xaa\xdc\x90\x38\xf3\xd1\xb1\x2c\x87\xb5\x8c\xf3\xb5\x1c\xc9\x72\x1c\x62\xce\xab\x93\x7d\xd8\xf8\xe9\x3f\xff\x29\xc6\x99\xae\x9e\xc4\x69\x6c\xb0\xb3\xf6\x72\xf6\xb3\xa5\x0b\xa5\x14\xed\xe9\x67\xb7\xcc\x56\x33\x0b\x88\xf7\xd8\xb2\x9f\x0a\xec\x23\x02\x3b\xa3\x38\xd7\x4c\x3e\xab\x9b\x81\x8d\x6f\x9f\x2c\x07\x33\x8c\xf3\x23\xd9\x0c\x71\x78\x2c\x32\x79\x2e\xf6\xf9\x67\x3f\xfd\xeb\x9b\x01\x8b\xce\x06\xc5\x4e\x58\x74\x35\x94\x4e\xc2\x82\x0c\xea\xab\xe7\x6a\x5b\x58\x18\xd6\x7b\x28\x23\x26\xeb\x8c\xc4\x04\x89\x94\x07\x32\x14\x81\xbd\x66\xd0\x5c\x32\xb3\x17\xa5\xb0\xde\x18\xf9\x51\x4e\x64\x28\x67\xdd\xae\x6f\xfe\x5c\xad\xaf\x0f\xf7\xe6\x08\x90\x49\x65\x61\x11\xc3\xb4\x24\x35\x6c\xec\x1e\x65\xa1\x7c\x8a\x36\x1a\x05\x46\x82\x03\x12\x29\xc0\x25\x56\x60\x4b\x39\xa9\x18\xbd\x51\x97\xae\xef\x75\x76\x93\xbe\x7e\xf7\xe9\x65\x4c\x34\x63\x0e\x7f\xf1\x6a\x89\xf1\x9b\xcd\x5a\xbf\xa4\xf2\xf3\x59\x07\xe6\xc4\x29\xd9\xf9\x83\x49\xcf\x89\x04\x5b\x4d\x80\x2c\xd8\xb4\x50\x53\x2f\x9a\x35\xe8\x9c\x54\x41\xa9\xd1\xe9\xfa\x96\x3c\x77\x89\xe4\xdf\x8f\xeb\x22\xcb\xf9\xf2\x70\x4f\xf9\xf9\x5f\xaf\x70\x7b\x57\xd7\x70\x67\xf3\xef\xe4\xb9\xa4\x21\xa5\x70\xb2\xe7\xd5\xb2\x0f\x7b\x0a\xc6\x16\x0d\x69\xcc\x1a\x8c\x35\x11\x08\x6b\x6a\x16\xaf\x10\x4b\x72\x09\xc5\xa6\xec\xcb\xcd\xb0\xf8\x87\xf2\x78\x78\x8d\x26\x93\x37\x6e\x7e\x22\xa7\xcd\x15\xaa\x6a\x0f\xac\x56\x6e\x8f\xf9\x7d\x51\x9a\x1c\x07\x90\x1a\x2a\x50\xae\x1e\xd8\x71\x81\x24\x16\xbd\xb8\x6a\x5c\x71\x37\xc3\xfc\x5f\x17\x29\xc3\xd7\x17\x27\xb5\x9e\x4e\x43\xfe\x67\xff\xf2\xd5\x43\x1e\x15\x3b\x9a\x3a\x8a\xc7\xc0\xd6\xee\xb1\x79\xf0\x64\x9d\x4a\x01\x72\xb5\x15\x88\x54\x6e\x49\x8d\x02\xb4\x4e\xdb\xe4\xb5\x41\x2d\x37\xc3\xe6\xef\xaf\x86\xba\x5a\x37\x11\x19\x17\x7b\x44\xe4\xdf\xfe\xe6\x2d\x10\x8d\x76\xd6\x5f\xd1\xef\xed\x81\x71\xb8\xef\x14\x99\x42\xa8\x96\x25\x43\x22\x8d\x40\x99\x09\x38\x57\x82\xe0\x23\x3a\xc7\xc1\x73\xbc\x44\x34\x9d\x0d\xf5\xaf\xdf\x80\x7f\x39\x28\x9f\x1c\x6e\xce\x9a\x93\x5f\xa1\x58\xdd\x51\x56\xde\x9e\x70\x95\xf9\xb3\xf8\x3c\x5f\xe6\xc5\x49\xd9\xde\x89\x3d\x3e\x8f\xa6\xfd\xbd\xe5\xdb\xce\xd3\xb3\x53\x87\x9e\xce\xeb\x8f\x9f\x5e\x5b\x1e\x3c\xb9\xb8\xbe\xce\x3e\xe1\xb5\x3c\x92\xf5\x46\xca\xec\x56\x8d\x8b\x8d\x3c\x7d\xfd\xd2\x78\xe7\x55\x87\x4e\xfb\x75\x36\x97\x77\x7d\xdb\x29\xfd\x43\x84\x16\x79\x82\x9a\x88\x3c\xba\x7d\xfa\xc7\x8a\xab\xda\x26\x0d\x88\x89\x81\xa4\xf9\x12\x31\x42\x2c\x88\xa6\xa0\xce\xa8\xd4\x5b\xda\x24\x97\x93\x5c\x69\xee\x1c\x6e\xdf\xbb\x3b\x14\xd9\xcc\x0f\x97\xd3\xf4\xf4\xe9\x6f\xa6\xaa\xec\x5d\x3e\xea\xbe\x06\xd1\x05\x8c\xee\x7b\x2c\x5d\xc0\xe8\xee\xc0\xef\xc2\x4f\x67\x07\xfb\x64\x97\x80\x0d\x41\x31\x4f\xb4\x86\x6b\xc5\x16\xf7\x24\xcd\x9e\x43\x62\x43\x09\x48\xa3\x05\xb2\x59\x9f\x25\x48\xc5\xb8\xe4\x42\x16\x64\xb4\x37\x84\x8b\x4f\x87\xf3\x8b\x1d\x6f\x3c\x65\xee\xe4\x84\xb7\xc4\x99\xd7\x49\xbc\x3b\xc9\xf0\xda\x2c\x67\x94\x6a\x99\xf8\x14\xfc\x88\x8d\xdb\x73\x64\x14\x0c\xaa\xe2\x48\x41\xae\xc5\x03\xd9\x6a\x80\x33\x6a\x28\x51\xa1\xd2\x5e\xb2\xb2\xe9\x66\xb0\xdc\xdd\xbc\x5a\x6e\x86\xb2\x5a\xfe\xff\x71\x28\xf3\xcd\xf1\x22\xee\x11\xbf\x3f\xf9\xe5\x75\x49\xae\xf3\xe2\xd4\x5b\x21\xb9\xce\x2b\x4c\x9d\x24\xd7\x75\x01\x68\x92\xe4\x82\x61\x54\x13\xa9\x95\xd1\x0a\xad\xda\xd3\x1e\x91\x98\x03\xb3\x8b\x50\x2b\x07\x20\x31\x8d\xa1\xab\x03\x8b\x41\x9c\xd7\xd1\xd4\xc0\x37\x04\x65\x47\xc7\xab\xf5\x38\xfc\xf9\xf0\xb5\x1f\xb5\x17\xd3\x08\xfb\xfb\x7f\xbc\x2e\xc2\x3a\xef\xfc\x75\x22\xac\xf3\xc2\x66\x27\xc2\x3a\x2f\xe0\xbd\xf1\x30\xda\xbe\x82\x09\x93\x08\x23\xeb\xf7\x24\x92\x29\xe5\xe2\xac\x8f\x10\xb7\x3d\xdd\xae\x78\x60\xaf\x2c\xe4\x18\x88\xc9\x63\x55\x12\x6e\x46\x18\xdd\xf6\x73\x9f\x5d\xe4\xfc\xa3\xc8\x69\xba\x20\xfb\x7f\x39\xcd\x57\x9e\xd3\x70\x20\x33\x91\xf8\x93\x55\xec\xf5\x9e\xe6\xa1\x94\x5d\x8a\x54\x0d\x90\xf5\xdb\x12\x57\x01\x8e\x21\x40\xad\x2e\x29\x6f\x4b\x54\xf1\x6d\x45\xfb\x4b\xbb\xe4\x6b\xc7\xf3\xbc\xd9\x5e\xa4\xfe\xa3\xd8\x24\x5d\xe9\xd1\x97\xb7\x49\x3a\xd1\xf5\xbf\x7d\x93\x18\xed\x8c\xa7\xa9\x4d\x42\x9e\x83\xd9\x23\x89\x33\x57\xb2\xac\x0a\x18\x9b\x14\x90\x31\xdb\x9a\x5d\x86\xcc\xda\x71\xb6\x91\xdd\xe5\x3f\x86\xf2\x36\x33\xb2\x17\x77\x51\xf5\xea\xfb\x4e\x81\xd6\x55\x13\xf9\x12\xb3\xc0\x4e\xb8\xfd\xe9\x65\x81\x6f\x7a\x67\xa0\x45\x3b\x79\x42\x62\x34\x92\x57\x7b\x44\x96\x70\xf6\x42\x4a\x41\xa6\x18\x81\xd0\xb7\x8c\x46\x18\x22\x79\x9d\xac\xb0\xc6\xf8\xb6\x64\xfc\xa4\xc8\x4a\x5f\xde\x1d\xa4\x9b\x28\xae\xde\xcc\x4e\x79\x7d\x8c\x77\x6e\xae\x2e\x8c\x4f\x6a\x1f\x8b\x8e\x69\xe2\xea\x1c\x59\x32\x6e\x5f\x8f\x63\xd7\x15\x96\x0b\xe0\xed\xbc\xc0\xf3\xfa\x2d\xfa\xdb\xbf\xd9\xf8\x1c\xbc\xef\xbc\x33\xdc\x99\x6f\xf2\xc9\x66\x33\x5f\x2d\x87\xf9\x28\x47\x9b\xef\x2f\xff\x6c\xf8\x68\x29\xdf\x5f\xb6\x7f\xef\xbc\x33\xdc\xce\xe3\x85\x67\x77\x47\x39\x1a\x60\x58\x3d\x5e\x5e\xbc\x84\x75\xd9\x7a\xe7\xf7\x5a\x2e\x5b\x6f\xf7\xc1\xae\xf5\x3e\x7e\xfa\x3f\x01\x00\x00\xff\xff\x50\x4d\xbf\x2f\xb4\x59\x00\x00")

func templatesJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesJson,
		"templates.json",
	)
}

func templatesJson() (*asset, error) {
	bytes, err := templatesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates.json", size: 22964, mode: os.FileMode(420), modTime: time.Unix(1608325090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates.json": templatesJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates.json": &bintree{templatesJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

