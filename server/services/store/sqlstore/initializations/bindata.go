// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/templates.json
package initializations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\xcb\x8e\x5c\xc9\x71\xf6\xab\x9c\xff\xcc\xe2\x07\x8c\x0e\x38\x2f\x91\x99\x91\xbd\xe3\x0c\xa5\x11\x01\x49\x43\x89\x23\xcb\x86\x34\x10\x22\x33\x23\xc9\xd2\x54\x57\x35\xaa\xaa\x49\x35\x06\x5c\x79\x2b\x59\xb2\x20\x40\xb0\x47\xf0\x08\x16\x6c\x68\x29\xc3\x5e\x18\x36\xbc\xd1\xa3\xe8\x05\x3c\x8f\x60\x64\xf5\x85\xcd\xee\x53\x64\xb2\x79\xe9\x96\x6c\xcc\x2c\x9a\x75\x4e\x65\x9d\xca\xb8\x7d\xdf\x17\x91\xf5\xd9\xf8\x58\x56\xeb\xd9\x72\x31\xee\xeb\xbd\xb1\xf0\x46\xc6\x7d\xed\x55\x08\x3a\x60\x40\xf4\x7e\x6f\x4c\xf3\x65\xfe\x74\x3d\xee\x7f\xef\xb3\x71\x56\xc6\xfd\x51\xa9\x90\x39\x7b\x0f\xc8\xc9\x01\x26\xa7\x80\x5c\x32\x60\x54\x2c\x51\x9c\xe3\xac\xf2\xb8\x37\x1e\xf2\x4a\x16\x9b\x7b\xed\x1d\x26\xa5\x50\xb2\x2d\x90\xad\x67\x40\x51\x0a\x48\x54\x05\xf6\xc5\x6a\xce\xca\xd9\x1c\xc6\xbd\x71\xb5\x5c\xbe\xd2\xfd\xeb\xfc\x48\x0e\x78\xfb\xe0\x9b\xe3\x43\x19\xf7\xc7\xcc\xab\x32\xee\x8d\x9b\xd9\x66\xde\xfe\xf9\x40\x36\x9b\xd9\xe2\xe1\x7a\xf8\xce\x5f\x8e\x7b\x63\x9d\xc9\xbc\xac\xc7\xfd\xcf\xc6\x59\x6e\xdf\x77\xfc\xf2\x8b\xbf\xf9\xfc\xbf\xff\xfd\xa7\xed\x59\x57\xcb\x43\x59\x6d\x66\xb2\xbd\xcc\x31\x98\x92\x03\x83\xab\x98\x01\x5d\x31\x40\x0a\x11\x28\x1b\xca\x3e\x06\x1d\xaa\x1e\xf7\xc7\x52\x42\xb2\x1c\x22\x48\x32\x05\x30\x5a\x07\x14\x5d\x04\x13\x95\x8b\x5c\xa2\x0b\x96\xc7\xbd\xb1\xd8\xe2\xc9\xa4\x0a\xa2\x02\x02\xc6\x12\x81\x4a\x75\x10\xac\x51\xd1\xe8\x6c\x8a\xb1\xe3\xfe\x48\xa1\xba\x18\x08\x21\x91\x8b\x80\xd9\x20\x90\x24\x01\x1d\x72\xf0\x5e\x14\xe9\x52\xc6\xa7\x4f\xf7\xc6\xbc\x12\xde\xc8\x9d\xcd\x89\x9d\xbc\xd1\x31\x3a\x8d\x66\x6f\x3c\x3a\x2c\xcf\x5d\x30\x0a\x5d\x54\x71\x6f\x2c\x32\x97\x93\x0b\xea\xe9\xde\x99\x11\x43\x62\xc7\x56\x81\x95\xe8\x01\x45\x0a\x50\xe1\x0a\xe4\x30\x27\xc5\x1c\xac\x0a\xcf\x1b\x31\x5a\xac\xd1\xa4\x00\xb1\x16\x0d\x98\xa2\x05\xaa\x59\x83\x42\xe4\x54\x58\x72\xce\xf1\xa2\x11\x3b\xef\xbf\x6a\xc4\xc7\x33\x79\x72\xc1\x88\xef\x2f\x79\x55\x86\xbf\x38\x79\xf1\x99\x0d\x9b\xa9\x3f\x5a\x15\x59\x8d\xfb\xdf\xfb\x64\x6f\xcc\xcb\xf9\xd1\xc1\xe2\xbb\xb3\xb2\x79\xd4\x2e\x3f\x6d\xb7\xce\x37\xed\xea\x67\xa7\x7f\xad\x4f\x6e\x6c\x86\xe6\xcd\xd6\xe1\x47\x5e\x94\xf1\xe9\xde\xf8\x68\x56\x8a\x2c\x3e\x3a\x6c\xaf\xde\x2b\xa7\xf7\xad\x97\xab\xcd\xc9\x4b\xa7\x2f\xb4\xc7\xfa\xf8\xe4\x09\xd3\xf2\xc4\xcf\x1e\xcf\xd6\xb3\x34\x97\x4b\xef\x3c\x7d\xf5\xfe\x89\x4f\x1d\x9f\xbe\x3e\x61\x39\x15\xad\x73\x3a\x5c\xb5\xdc\xf9\x85\x49\xcb\x89\x44\x57\x6d\x84\x2c\x26\x03\x16\x4f\x40\x9a\x34\xe8\x9c\x54\x31\x52\xd9\xeb\x7a\x43\x96\xbb\x14\x7e\x1f\xf2\xaa\xc8\x62\xb6\x78\x38\x1d\x7c\x3f\xfe\xd7\x2b\x91\x57\x42\x08\x89\x6d\x02\x0a\x86\x00\x55\xd1\x40\x81\x3d\xb8\x88\xca\xa7\x94\x52\x4d\x6a\xdc\x1f\x2d\x4a\x8a\xd9\x38\x28\x2e\xd5\xd3\x90\x72\x51\xa0\x06\xac\x2d\x5b\x58\x25\x61\x3a\x56\x2c\x2a\x65\xfc\xd5\x1d\xd7\xd6\x51\x88\x6a\x7a\xc7\x75\xb6\xce\xd7\xb6\xbe\x21\x06\x4c\x5a\x80\x7c\x8b\xe0\x8a\x12\x0b\x72\xd0\x16\x6f\x47\xc2\xfb\x98\xd7\x9f\x4e\x6d\xf6\xb8\x37\xce\xd6\x1f\xcb\xc1\xe1\x7c\x9b\xe0\x37\xab\x23\xb9\x66\xd2\x43\x0c\x92\x2b\x6a\x28\xd5\x15\x40\x23\x1a\x28\x72\x82\xa0\x51\x7c\x70\xc2\x3e\xe8\x77\x90\xf4\x0c\x2a\x67\x70\xc2\x90\x06\xb5\x56\xc6\xee\x32\x64\x41\x8b\x49\x41\x70\xec\x01\x83\x2d\x40\xc6\x0a\x44\x47\x9c\x23\x71\xf5\xbe\xdc\x90\x21\x2f\x27\xbd\xe3\xe1\xfe\x6a\xb6\x5c\xcd\x36\xc7\x6f\x2b\xeb\x3d\x5c\x2d\x8f\x0e\xdf\x3f\xde\x3e\x76\x97\xb9\xa6\x12\xe5\xe8\x9d\xb8\x1c\xd9\x82\x4d\xcc\x80\x55\x07\x20\xed\x33\x18\x4e\x26\x71\xb0\x45\x4a\x1c\xdf\x7c\x3a\xed\x7b\xe2\xa9\xa4\xab\x83\xd7\xce\xda\x09\xcf\x31\xce\x7a\xe3\xa6\x3d\xc7\x28\xad\x12\x22\x41\x36\xd1\x34\xb7\x4f\x40\x9c\x02\xe4\xe2\x9d\xd7\x39\x65\x95\x2e\xa5\x00\x9f\xc4\xc6\x9c\x35\x54\xe3\x32\x60\x48\x15\xa8\x60\x84\xea\x05\x99\x54\xae\x14\xcc\x45\xcf\xe9\xbc\xff\xe5\x98\x67\xc3\xab\xcd\xc0\x43\xe1\xd9\xfc\x78\xf8\xe1\xf2\x68\xb5\xe0\xf9\x54\x4e\xf8\xc3\xaf\x7e\x32\x09\x7e\xaa\xaf\x39\x25\x82\xcc\xce\x03\xa6\x60\x81\xac\x24\xb0\x01\x6d\x48\x91\xbd\x0f\xed\x71\x53\x75\x26\x55\xf1\xc0\xb9\xa5\x8b\x88\x04\x64\x74\x6d\xf7\x32\xeb\x1c\x92\xc2\x2d\xf8\xf1\x49\x1b\x8c\x09\x52\xd6\x04\xe8\x6a\x06\xa2\x28\x90\x24\x23\xd5\x2c\xa4\xa4\xb6\x9a\xc6\x64\x62\x08\x15\xda\xa2\x80\x2e\x24\x20\xd4\x09\xc4\xa4\x50\x83\xaf\xc9\x19\xd7\x56\x8b\xc1\xb8\xa2\x11\x8a\x63\x02\x24\x71\x40\x45\x34\xf8\x4a\x59\x29\xe4\xe8\x69\x5b\x1e\x0c\x3a\xb6\xa6\x40\xf5\x44\x80\x7e\x5b\x4f\x6a\x4b\x2d\x41\xa3\xc9\x3a\xd9\x38\x55\x1e\x82\x76\xce\x05\x44\x7d\xd9\x37\xda\x05\xd2\x5e\xd3\x0e\xdf\xf0\x39\x33\x71\x86\x9c\x90\x00\xd9\x06\x20\x72\x08\x84\x89\x25\x26\x1d\x09\xe9\x86\x7c\xe3\x6a\x56\x59\x6f\x78\x73\xb4\x7e\x17\x39\xa5\xcb\x91\xde\x0d\xf8\xea\x73\x9c\x4e\x6f\xbd\x9a\x54\x82\x76\x2d\x79\x84\x2b\x18\xbc\x39\x8e\x26\xe3\x77\x20\xb9\xce\x62\x71\xc1\x71\xde\x48\xa9\x39\xdb\xc0\x33\xaf\xb8\xbf\x5a\xfe\x50\xf2\x66\x68\xe0\xe1\xaa\x67\xdc\xbf\x90\x1d\xce\x18\x60\x17\x56\xd8\x1b\x17\x7c\x70\x9a\x91\x4e\x5c\x6e\x79\x6e\xd1\xcf\x9a\x97\x2d\x57\xe3\xfe\x36\xf9\x7c\xd0\xfe\xbe\x2b\x95\x8f\xe6\x9b\x86\x54\x4a\x3f\xce\x78\xcc\xf3\xa3\xf6\x19\xdf\x94\x1f\x6d\x86\xef\x1c\x8e\x6d\x6f\xaf\x2c\xfd\x57\x32\x9f\x2f\x9f\x9c\xad\xdc\x49\xdb\xce\x56\xbe\xb7\x18\xee\xaf\x96\x0f\x57\xb2\x5e\x4f\xaf\xfe\xe1\x4a\x64\x71\x61\xf1\x56\xf8\x0a\xc4\x1c\x3c\x60\x91\x08\xa4\x2a\x81\xd3\x41\xb4\xaf\x45\x93\xbb\xf8\xd8\x1f\x2c\x0f\x0e\x9b\x5f\x94\xdf\xff\xfa\xf7\xbf\xfe\xf2\x8b\xbf\xfb\xf1\xf4\x47\xbc\xbf\x5a\x3e\x39\xff\x88\xae\x8a\xfb\xec\x23\xee\xac\xf2\xa3\xd9\x63\x29\xe3\xd3\x4f\xce\x3d\x60\x2d\x73\xc9\x9b\xf1\xdc\x11\x3b\xcb\xff\xa9\x3d\x2f\x00\x93\x17\x5a\xf4\xdb\x52\xce\xb7\xc5\xa6\x9a\x9c\xaa\x50\x9d\x8f\x80\x89\x0b\x10\x5b\x86\x52\xb4\xcb\xb6\x7a\xa5\xd5\xc5\x6d\xf9\xda\xec\xe1\xa3\xe1\xcb\x2f\x7e\xf1\x4f\x3d\xf6\xec\xc2\x90\xcf\xd6\xfe\x86\x94\xd9\xd1\xc1\x2e\x53\xf2\xf1\xd9\xb2\x91\xd8\x05\x6f\x02\xa8\xda\x2c\x19\x74\x01\x72\xaa\x40\xd4\xd5\x4a\x89\xb5\x18\x6d\x2f\x2c\xfb\xf5\xe5\x93\x17\xed\xb0\x61\x57\xd8\x1a\x05\xc1\xb6\x0c\xae\x1a\xa5\x0a\x14\xda\x7e\x88\x76\xb9\x54\xd9\x6e\xd6\xe9\x0e\xdf\xe5\x8d\x0c\x1f\x6c\x73\x4c\x79\x6e\x97\x9f\x7d\xc0\x49\x06\x2a\x1f\xcf\x0e\x64\xfb\xb9\x45\xd6\x79\x35\x3b\x3c\x4d\xc7\xed\x4b\x9c\x6b\x1c\x3f\x9f\x40\xff\x3b\x81\xd1\x94\x8e\x60\xc8\x60\xf4\xd3\x39\xcc\x52\xc5\x24\x2a\x40\xd5\x95\x1b\x0e\xc8\x40\x59\x3b\xe0\xa8\x82\x52\xbe\x46\x76\xee\x76\x00\xa3\xaf\x0b\xaf\x16\xc3\x66\x39\x1c\xf2\x6c\xb1\xd9\xa1\x07\xfd\xf6\xba\x78\x28\x84\xec\x6c\xe4\x0a\x56\xc5\xc6\xca\x93\x06\xb2\x26\x42\x31\x4a\x6a\x90\x28\x9c\x4b\x3f\x1e\x8a\xac\xa2\x12\x6b\x21\x69\xad\x00\x4d\xe3\xf8\x51\x45\xd0\xd6\x64\xa7\x94\xc9\x51\xc9\xbb\xc0\x43\x2d\xfe\xdd\x15\xac\x1c\xb4\xc3\xa8\x2d\xe1\x0e\x97\xa8\xec\x8c\x6a\x5b\xa4\x72\x01\x24\x67\x80\x4c\x64\x68\xc4\x3e\x07\x21\x12\xe3\x77\x97\xb5\xce\x77\xbf\xbc\xac\x7d\x43\x64\x33\x5b\x3c\x1c\xbe\xb9\xdc\x48\x5f\x59\x0b\xd9\x68\x23\x81\x20\x5a\x74\x80\xd9\x2b\x20\x9d\x1c\xa8\xa4\xc4\x86\x2c\xe8\x6d\x7d\x16\xa4\x5b\x38\xf2\x92\x14\xf8\x7c\xa6\xb2\xba\xb0\x53\x99\xa1\x6a\x8e\x80\xc5\x68\x20\x6f\x3d\xe8\x56\xc7\x29\x64\xcd\xe6\x62\x4a\xb9\x53\x86\xaf\x2d\xf3\x8e\x8a\xd0\x6e\x39\x4b\xae\x52\xbd\xd5\x21\x83\x64\xad\x01\xb5\x6a\xc9\xd5\x27\x10\x46\xaf\xad\x51\xd5\x46\x73\x61\xd9\x07\x1b\x5e\x94\xa3\x1d\xa5\xf2\xfe\xd1\xea\x70\x7e\xbe\x72\x50\xaa\x92\xad\x04\x9e\x51\x03\xfa\x5c\x80\x82\x18\x70\x56\x54\x51\x49\x9b\xbc\x85\x18\x67\x2b\x7f\x57\xe4\xd3\xf9\xf1\xf0\xe0\x78\x91\x5f\x94\x0b\xb5\x2d\xc6\x46\x64\x90\xe4\x04\xb0\x1a\xd3\x80\x83\x01\xef\xb4\x93\x8c\x3a\x23\xe3\x05\xf4\x70\x74\x70\xc0\xab\xe3\x1d\x69\x70\x23\x3f\xda\xbc\x24\xff\xfd\xf2\xe7\x27\x34\xe7\xa5\x29\x30\xe8\xa0\xbd\x8f\xfe\x8a\xaa\x10\x74\xb0\xde\x46\xd2\xd3\xfe\x8e\x31\x56\x47\x92\x21\xa1\x36\x80\x99\x1a\x10\xaa\x08\x31\xb0\xf1\x9e\x62\x20\xbe\xa4\x2a\x94\x50\xc9\x06\x2a\x40\x7a\xeb\x68\x64\x80\xb0\x78\xe0\x5a\x93\xa4\x50\x4b\x28\x7c\x31\x26\x3a\xef\x7f\x39\xfe\x3f\x7a\xb8\x1e\xbe\xfc\xe2\x67\xff\xf0\x0a\xf8\x7f\xfc\xc1\x0f\x4e\xdf\x6e\x48\xed\x20\x03\xcd\x91\x16\x65\x76\xba\xf9\xb3\x45\x9e\x1f\x95\x6d\xcc\x1d\x9e\xc3\xf0\x2d\x87\x0e\x3a\x70\xb1\xe0\x42\xf3\x26\xd4\x1e\xc8\xd6\x96\xad\xb4\xb5\xb5\x56\x5b\xf4\x39\x08\xd8\xa2\x76\x5d\x4b\x4a\x4e\x3b\x90\x52\x0c\x20\x57\xd7\xc0\x54\x06\xb4\x41\x8a\x31\x5a\x33\xc6\xf1\x93\xa7\xd7\x16\x75\x3f\x7b\xfe\xf9\x6a\xa8\x96\x0b\x1a\x48\x56\x33\x20\x67\x03\xa4\xab\x02\x43\xd2\xea\x8c\x4b\x16\x5b\x64\xac\xe4\xb1\xac\xd6\x52\xc6\xfd\xca\xf3\xb5\x3c\x7d\x9e\x9d\x6c\x38\x6d\xe3\xe7\x55\xd8\x89\x53\x5a\x87\xe2\x0c\xa4\x9c\x03\x60\x70\x0a\xc8\x30\x03\x59\xcd\xd6\xe9\x8c\xc8\x8d\x9d\x74\xee\x9f\x57\x91\x5c\x45\x0f\x56\xda\x6d\xe4\xa5\x31\x73\x0b\x26\x45\x0a\x88\x4a\x58\xe7\x66\xff\x9e\x6f\x3b\x25\xa0\x20\x1a\x67\x68\x42\xb5\x46\x0c\xc6\xef\x52\xad\x9d\xd2\x36\x13\x37\x6a\x2c\x0d\x62\xaa\x0a\x14\xad\x01\xad\x23\x46\xc5\x5a\xab\x72\x4b\x04\x94\x8f\x0e\x65\x31\xac\x64\x33\x5b\xc9\x81\x2c\x36\x03\xe7\xbc\x3c\xda\x05\x18\x7e\xfa\xcf\x7f\x8a\x02\x0a\xa9\x24\x5b\x4e\x51\x1b\xc9\xc3\x68\x08\x08\x29\x02\x25\x65\x34\xa9\x8a\xd1\xe1\x0e\xc0\x40\xde\x39\x37\xc5\x83\x95\x52\xb8\x03\x43\x3a\x63\x51\x9b\xac\xc1\x3a\xcb\x80\xa6\x26\x20\x4d\x15\xb8\x24\x9f\x8c\xb8\x94\x43\xb9\x1d\x1d\x8d\x6f\xca\x93\xe1\x35\x34\xf6\xb7\xde\xde\xc0\x56\xf1\xaf\xe8\x57\xed\x82\xd3\xca\xef\x68\x6f\x38\x22\xa7\x89\x04\x24\x04\x03\xe8\x5b\x68\x06\x36\x0d\x9b\x28\xca\x35\x63\xc8\xea\x76\x84\xe6\xb7\x8f\x16\x83\x1d\x36\xb3\x03\x59\x0f\x3c\x3c\x11\x99\x34\xc4\x97\x5f\xfc\xf4\xaf\x6f\x47\x54\x7a\x09\xda\x46\x41\x70\xd6\x35\xe0\x9d\x12\x50\x56\x1a\x42\x52\x26\xb2\x0b\x89\x14\xf7\x47\x65\xad\xc9\xd6\xe8\x34\x24\x0c\x15\x50\x37\x3f\xaa\xba\x80\xb1\xe4\xbd\x0f\x86\x94\xa2\xe9\xa8\x44\x6b\xf4\xd5\x66\xc9\x36\x2a\x2d\xe9\x1d\x30\xde\x89\xaf\xda\x25\x0d\xc6\x24\x02\x94\x56\x7d\x8d\x61\xe0\x62\x8c\x2d\x46\x67\xa3\xd4\x0d\xc1\x9a\xcb\x6e\x21\xad\x00\x0f\x77\xee\xdf\x1b\x8a\xac\x67\x0f\x17\xd3\x5e\xf1\xf9\x6f\xa6\xf4\xee\xae\xaa\xba\x3f\xa2\x41\x61\x27\x16\x22\xb3\x06\x54\xc1\x01\x65\x97\x41\xe9\x84\x98\xbc\x17\xbf\xed\x01\x76\x95\xf2\xfd\x91\xb2\x73\xa1\xfa\x08\x49\x49\x01\xf4\x92\x81\x2c\x5b\x20\xa9\x9c\x62\xc1\x20\xd5\xf5\x96\xf2\xfd\x51\x23\x45\x63\x49\x81\x66\x6b\x00\x4d\x29\x40\xca\x22\xb0\xca\xc2\xd6\x34\xda\xe4\x7b\x2b\xfe\xfe\x28\x9e\x43\x35\x31\x00\x22\x2a\xc0\x40\x16\x88\x93\x05\xcb\xd5\x25\xf6\x26\xb3\xd6\xd3\x3d\x39\x17\xa3\x22\xba\x9a\x7d\xac\x56\xe4\xcc\x0e\x37\xeb\xcc\x0d\x3b\xd8\xe2\xb5\x33\xcb\x15\x11\x54\x56\xeb\xe5\x82\xe7\xc3\x87\x4b\x9e\x77\xaa\xa0\x7d\x02\xf7\x2b\xa9\xa0\x17\x34\xb3\xce\x54\x74\x46\xbe\x3e\x5e\x0e\x77\x97\x3d\x7a\x59\xa7\x52\x71\xb6\xee\xdd\xe5\x6c\xf1\xb0\x43\xf9\x8c\x94\x8a\xb0\x09\xa0\x72\x16\xc0\x5c\x04\xa8\x64\x0f\x46\x1b\x2e\xc5\xb6\x00\xe1\xe7\x96\x5d\xc8\x70\xa2\x78\xbe\x40\x97\xec\x93\xed\x4f\x77\xf8\x03\xde\xc8\xc3\xe5\xea\xa5\xba\xe4\xf3\x1c\xb7\x4b\x1c\xb9\xa0\xf3\xcd\xaa\x0c\x0f\x3e\x9d\xcd\xe7\x3d\x72\x70\x17\x90\x7a\xb6\xf8\x57\x67\x0b\x5e\x64\x99\x5e\xf8\xa3\x15\x2f\x1e\x9e\x3f\x76\x57\x31\xb8\xa0\xa8\x0a\xcf\x37\x8f\x5e\xb8\xd7\x3d\x25\xed\x99\x42\x79\x24\xc3\xdd\x86\x73\x5e\x4d\xd5\xef\xd4\xb5\xce\x9e\xfa\x5b\x7a\x7a\x2b\x2e\xad\xda\x09\x7e\xcf\x57\x35\x5d\xab\x76\x16\xef\xf3\x55\x6d\xd7\xaa\xc5\xd9\xa0\xb3\xb7\xe0\x7d\x7b\x56\x6c\x3b\x10\x2c\x41\xc6\x92\x31\x09\x23\xe1\x45\x0d\xe8\x5b\x38\x65\xb3\x17\xe8\x1d\x7f\xf8\xfc\x77\xdd\x72\x87\x33\x9a\x4c\x50\x13\xb8\xc0\x6f\xff\xdf\x91\xb0\xab\x75\xc5\x26\x0b\x2a\x95\x00\xc8\x6a\xbb\x2f\x08\xe8\x48\x45\x93\xad\xaf\x64\x6f\xc7\x34\xcc\x5d\xde\x70\xe2\xb5\x0c\x0f\x4e\xee\x9c\x44\x05\x3f\xff\xaf\xeb\xce\xff\xbd\xd9\x51\x98\xae\x16\xc9\x24\xe8\x27\x8c\xc1\x4e\xf0\x71\x1d\x31\x78\xbf\xa3\xec\x06\x8a\x89\x2c\x26\x40\x6d\x1c\xa0\xcb\xfa\x64\xfe\xaf\x58\x9f\x7c\xcc\x62\xc8\xb8\x5b\x22\x5a\x1d\x0f\x0f\x0e\x57\x97\x25\xfb\xb7\xd4\xb4\xee\x14\x4f\x6e\x48\x5c\xba\x4e\xeb\xbb\x53\x35\xba\xb6\x1c\x64\x95\x72\xce\x4e\xa2\x3e\x24\xeb\x77\xcc\x4c\x84\xa2\x34\x7a\x8a\x20\x35\x56\xc0\x5c\x03\x90\xa7\x02\x49\x9c\x09\xe2\xab\xf5\xc5\xdf\x0e\xca\xff\x55\x91\x32\x7c\x75\x7e\x54\xeb\xf1\x74\x02\xf9\xd9\xbf\xbc\xfb\x31\x46\xa3\xc8\xe3\x54\xc8\x9b\x48\xce\xed\xe0\xf9\xa4\xb4\x8e\xc6\x07\x48\xdb\xc4\x8d\x39\x34\xe0\x67\xc0\x18\x14\x95\xab\x91\xe0\x2f\xcd\xa9\x74\xf6\x62\x5e\xbf\x77\x73\x59\x66\x59\x3e\x1e\xcc\x8e\x0e\xdd\x7f\x5e\xd9\xed\xae\x7e\xc2\xfe\xb8\x05\x66\xc3\x7c\xf6\xf0\xd1\xe6\xff\x8d\x7b\x7d\xcd\x9e\xce\xe6\xca\x14\xe9\x0e\xc6\x58\xe3\x27\xa4\xb0\x80\x36\x1a\xb5\x23\x2d\x47\x6b\x54\xf1\xa8\x20\xd7\x66\x23\x57\x6d\xfb\x2e\x1a\x0a\x2b\xa3\x74\x90\xac\x5c\xba\x1d\xa4\xfb\x5e\x5e\x2e\xd6\x43\x59\x2e\xfe\xff\x66\x28\xb3\xf5\xe1\x9c\x77\xc4\xc7\x4f\x7e\x79\x5d\xce\xdd\xa5\xff\xdf\x10\xe7\x96\x82\xec\x6c\x23\xc8\x5e\xb5\xd5\x74\x02\x22\x4b\x60\xb2\xf3\x42\x22\x2e\x56\xe9\xe7\xdc\x39\x91\xe4\xc2\x19\x2c\x25\x01\x2c\xd6\x03\x05\x6d\x1a\x2a\x74\x94\x33\x31\x49\x9c\xe6\xdc\xd1\x92\x51\x13\x8a\x9f\xd5\xca\x38\xb5\x03\xc2\x75\xe6\xc6\x1d\x9c\xfb\xda\x99\x75\x27\xe7\xee\x9f\x3c\xea\xca\xac\xaf\xc8\xb9\xef\xcf\x16\x9f\x9e\xb3\xc1\x9e\x94\x7c\x0d\xd2\x5d\x6c\x60\xaf\x2b\x42\xb5\xd6\x34\xd2\xdd\x38\xa0\x29\xe0\x44\x71\xd4\xcc\x46\xc9\x75\x48\x77\xe1\xc4\xa5\xc4\x04\x5c\xaa\x06\x2c\xb1\x02\x05\xd5\xe0\xaa\xe3\xec\xb3\x54\xaf\x4c\x2f\xe9\x7e\x11\xa9\xf8\xd5\x2f\x3a\x49\xc5\xd9\xd9\x85\xc9\x11\xfb\xe8\xdc\xae\xf9\xda\x18\xd0\x79\x95\x22\xe4\xea\x1a\x2d\x52\xb9\xb1\x70\x05\xa6\xf1\x90\x14\xb4\x35\x5a\x6e\x07\x1e\xf8\x70\x39\xd4\xe5\x6a\xe0\xe1\x09\xcf\x77\xc8\xcf\x7f\xfb\x9b\x1b\x38\xd8\xa0\xbd\x0b\x57\xaa\x4d\xbb\x60\xbd\x71\x66\x7a\xd7\x39\x39\x6f\x85\x13\x24\x54\x01\xd0\x22\xb7\xb4\x43\xa0\xa9\x64\xa2\x20\x4a\x99\x7a\x6b\x26\x57\xcb\x91\x0c\xe5\x44\x72\x78\xfb\xf3\xf0\x7d\x62\xc8\xed\x99\x5d\x9d\x1c\x4a\x75\xc6\xc4\xe9\x69\x66\x4b\xd6\xed\x68\xd4\x26\xd2\x2a\xeb\x18\x41\xb8\xf1\x50\xaf\x08\x28\x29\x0b\x46\xb1\xa4\x68\xa8\xea\xa4\x6e\x08\x25\x5e\xf5\x89\xcd\xc9\x0c\xce\x5b\xf7\x07\xa9\x31\x4b\xc5\x0c\xaa\x21\x46\x94\xa8\x81\xb4\x2f\xa0\x73\x09\x59\x5b\xa1\xe0\xe8\x5d\xf9\x43\x17\xdc\x9d\xf2\x87\xa0\x7d\x50\x6a\x62\x48\x39\xa0\x09\x0a\x77\x20\xd2\x44\x14\x89\x3c\x43\xad\x14\x01\xc5\x96\x06\xc2\x3c\x38\x13\xc5\x07\xcd\xb6\x46\xba\x25\x88\xf4\xe0\x70\xb9\xda\x0c\x7f\x3e\x7c\xe5\x47\xed\x8f\xe9\xdc\xfc\xf7\xff\x78\x5d\x34\xea\x45\x38\xfa\x1c\x1b\x57\xd0\x80\xd1\x13\x90\x73\x08\x98\x82\xb3\x41\xa8\x86\xed\x98\x7f\x27\x1a\x95\xec\x8b\x49\xd9\x41\xa9\x26\x01\xd6\x10\x80\x30\x44\x10\x17\xb3\x24\x65\x63\x44\xdf\x8f\x46\xb3\xd2\x3e\xf8\xdc\x62\x68\xab\x80\x5a\x04\x4a\xe2\x20\x67\x31\x86\x42\x61\xf6\xdd\x33\x1f\xaf\xd3\x01\x6a\x5f\xc1\xc6\x49\x34\x8a\x2e\xec\xe0\xa5\x29\x16\x5d\xb3\x16\x68\x04\x15\xb0\x39\x17\xe9\x9c\x80\xbd\x4a\x4a\xdb\x98\x13\xdd\x92\x53\x59\x77\xe6\xbb\xb0\xea\x0b\xe6\xa7\xba\x46\x7f\xf7\x75\x88\x7b\xcf\x8d\x5a\xed\x75\xca\x90\xda\x98\x5e\x8d\x51\xeb\x5d\x03\x5c\x6f\xe8\x5c\xec\x75\x86\x9f\x3a\xcf\x12\x74\x8e\xa8\x77\x6d\xf6\x94\x8c\x65\x8c\xc7\xe8\xa7\x8e\x85\x59\xaf\xed\x2e\x00\x95\x52\x2e\xde\x05\x06\xde\xba\xae\x2f\xa1\xe1\x6f\x07\x99\x23\x12\x06\x53\x95\xc4\xdb\xa1\xa2\x6e\xdd\x76\xf8\xf2\x8b\x5f\xfc\xf6\x8f\x63\xf6\xaf\x2b\xdb\xfe\xdf\xec\xdf\x3b\x9f\xfd\xa3\x88\x76\x82\x66\xa0\x53\x14\xf4\x8e\x01\xd9\x94\x7d\x62\xac\x16\xd0\x85\xad\xd8\x5b\x80\x38\x46\xa8\xd5\x27\x15\x5c\x61\xc5\x37\x25\x6a\x5d\x8a\x92\xaf\x1c\xce\xf2\x7a\xf8\xc3\xe7\xbf\xfb\xe3\x08\x92\xae\xa1\x94\x37\x17\x24\x9d\xde\xf5\xbf\x3d\x48\xac\xf6\x36\xe0\x54\x90\x60\xa0\x68\x77\x74\x44\xb2\xca\x45\x1a\xdb\x34\x14\x2d\x60\x94\x08\x84\x92\xc1\x19\x57\x92\x62\x87\xc5\xa6\xdb\x81\x82\xde\x3f\x1e\x1e\xbc\xbb\x53\xa4\x7d\xf0\xe0\xa6\x7e\xc2\xc3\x34\xa3\x46\x9c\x3c\x4d\x4e\x01\x77\x70\xec\x4c\xce\xab\xa2\x3c\x44\xc6\x00\xe8\x1b\xe2\x4d\xca\x01\x4b\x30\xe4\x8a\xe5\x44\xfc\xbc\xad\x3b\x7b\x37\xaf\xcf\xb1\xb7\x07\x2a\x9e\xd9\xfa\xbd\xf7\x86\xbb\xb3\x75\x3e\x5a\xaf\x67\xcb\xc5\x30\xdb\xc8\xc1\xfa\xfb\x8b\x3f\x1b\x3e\x5a\xc8\xf7\x17\xed\xbf\xf7\xde\x1b\xee\xe4\xcd\x73\xd7\xee\x6d\xe4\x60\x80\x61\xf9\x64\x21\xab\xe7\x3c\x64\x79\xe2\x1d\x5a\x29\x35\xd9\x2f\x21\x34\xea\x0a\x77\xb8\x70\x61\x7a\x27\x2b\x3a\x52\x05\xac\x4b\x0a\xd0\xda\xad\xae\x96\x21\x93\xf6\x94\x1d\x93\xbf\xac\x64\xdf\x64\x1b\xfb\xc5\x51\xd3\xdb\xfc\xe9\x64\xe4\x5d\xf3\x9b\x6f\x30\x52\x3b\x93\xf4\x9f\x5e\xeb\xfc\x6d\xd7\x13\xe3\x8c\x9b\x9c\xea\xb6\xda\x60\x50\x3b\x58\x75\xa7\xdf\xee\xe8\xf1\x5c\xdb\xeb\x2f\xf7\x78\xbe\xbd\xe4\x72\xc0\x87\x5d\xcd\x9d\x4e\x0f\x7a\x9d\x63\xe5\x9d\x4d\xc0\xf3\x63\xe5\xcb\xcd\xb0\xfd\x41\x0d\x29\x3d\x5d\x9e\x4e\x51\xe7\x7a\x47\xcb\x09\x63\xf0\x3e\x31\x38\xcf\x0e\x90\x8a\x06\x22\x5f\xc1\x68\x1f\x4c\x45\xed\x6c\x74\x13\x47\xcb\x5f\x3a\x64\xd9\xe9\xe5\xd7\x3e\xf5\xd8\x39\x39\x7d\xf6\xdc\x0d\x82\x6f\x11\xf8\xcb\x77\xa4\x53\x91\x3b\x6f\xd6\xf1\xfa\xd3\x13\x06\x3c\xb9\xf4\x85\xd1\xdb\xce\xc6\xf3\xd9\xc2\xef\x1f\x3d\x3c\x39\x55\xf7\x82\x5d\xee\x4c\x12\x67\xbe\x7d\x36\xf0\xf4\x2a\xbe\xdd\x29\x02\x9e\x9f\x03\xdd\x7e\xc6\xd0\x37\x62\xd9\xd9\xee\xbe\xb4\x76\xdf\xa0\x65\xe7\xf8\xfa\xa5\xb5\xed\x8b\x76\xbb\xb3\x64\x5c\xff\x07\x0d\xba\x1a\xf6\xcf\x9e\xf9\xbe\xee\xfe\x39\x83\x2e\xf1\xf5\xc2\xca\x3b\xf6\xf8\xe2\x4f\x19\x64\x6f\x74\x30\xc2\xe0\x0a\x07\xc0\xd2\x92\x9e\x26\x0f\x36\x18\x1f\x0a\x89\x44\xbe\xd8\xd4\xbe\x3f\xb9\xb5\x2f\x3e\x63\xfb\x1f\xdd\xfd\xe1\x56\xcd\x14\x4d\x20\x66\x6b\x94\x51\xb8\xab\x9a\x91\x76\x26\x54\x0f\x3e\xda\x0a\x88\x5c\x80\x6a\xac\x50\x83\x89\xed\x6d\x1e\xa3\xbf\x1d\x5d\xa9\x8f\x1b\xbf\x1d\x1e\xbf\xda\xcf\x15\x76\xce\x30\x79\x63\x7a\x07\x97\xb4\x75\x7b\x3d\xca\xc4\x0d\x2a\xbf\x9d\xc7\xed\x5f\xa3\xdf\x15\x95\x52\x53\xa7\xb9\xd1\x05\xc2\x1d\x62\x95\x50\x0e\x82\x4a\x41\x46\x66\x40\x13\x1a\x42\x10\x02\xc6\xa0\x93\x13\xd2\x86\x6f\xaa\xdf\x35\x29\xe9\xa6\x37\xc7\xc6\x6f\xa3\x94\xfb\x76\x18\xc6\xeb\x73\x83\xce\x0a\xd3\x55\xf6\x27\x95\x56\x67\x3c\xe1\x44\x3f\x02\x1d\x5a\xbf\xeb\x17\xa5\xaa\xe7\x58\xb4\x24\xf0\xd6\xb7\x58\xc9\xae\x6d\x4e\x80\x4c\x86\x63\xb0\xa4\x7d\x70\xb7\x63\x36\xff\xce\xfd\x7b\xc3\xd7\xf9\xf8\x92\x44\xf0\xec\xb7\x41\xff\xed\x76\x4c\xe5\x5f\xff\x07\x2a\x95\x57\x7e\x52\x18\xd2\x5e\xa3\xb9\x54\xe6\x3e\x79\xfa\x3f\x01\x00\x00\xff\xff\xed\xf5\x0e\x06\x88\x59\x00\x00")

func templatesJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesJson,
		"templates.json",
	)
}

func templatesJson() (*asset, error) {
	bytes, err := templatesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates.json", size: 22920, mode: os.FileMode(420), modTime: time.Unix(1607717474, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates.json": templatesJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates.json": &bintree{templatesJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

